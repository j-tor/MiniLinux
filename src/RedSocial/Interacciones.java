/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package RedSocial;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;

public class Interacciones extends javax.swing.JPanel {

    /**
     * Creates new form Interacciones
     */
    
    private ArrayList<String[]> twits;
    private Func_usuario adm_usr;
    
    public Interacciones(Func_usuario adm_usr) throws IOException {
        initComponents();
        this.adm_usr = adm_usr;
        txtUsr.setText("@" + adm_usr.getUser());
        
        try {
            this.twits = adm_usr.cargarInteracciones();
            cargarTwits();
            this.revalidate();
            this.repaint();
        } catch (FileNotFoundException | NoExisteUsr ex) {
            JOptionPane.showMessageDialog(null, "Error " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);

        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        txtUsr = new javax.swing.JLabel();
        content_scroll = new javax.swing.JScrollPane();
        content = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(910, 720));
        setPreferredSize(new java.awt.Dimension(910, 720));

        background.setMinimumSize(new java.awt.Dimension(910, 720));
        background.setPreferredSize(new java.awt.Dimension(910, 720));

        txtUsr.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        txtUsr.setText("sexo");

        content_scroll.setBorder(null);
        content_scroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        content_scroll.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        content_scroll.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        content_scroll.setMinimumSize(new java.awt.Dimension(880, 713));
        content_scroll.setPreferredSize(new java.awt.Dimension(880, 713));
        content_scroll.setRequestFocusEnabled(false);

        content.setAutoscrolls(true);
        content.setMinimumSize(new java.awt.Dimension(0, 0));
        content.setName(""); // NOI18N
        content.setPreferredSize(new java.awt.Dimension(880, 640));

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
        );

        content_scroll.setViewportView(content);

        jLabel1.setText("sexo2");
        jLabel1.setPreferredSize(new java.awt.Dimension(80, 80));

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(content_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(txtUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(429, 429, 429)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(content_scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(txtUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    private void cargarTwits() throws IOException, FileNotFoundException, NoExisteUsr{
        
        content.removeAll();
        content.setLayout(new FlowLayout(FlowLayout.LEADING,0,0));
        
        twits = adm_usr.cargarInteracciones();
        
        if (!twits.isEmpty()) {

            Model_msg[] twits_p = new Model_msg[twits.size()];

            for (int i = 0; i < twits_p.length; i++) {

                String[] mensaje = twits.get(i);

                Func_usuario tmp = new Func_usuario(mensaje[0]);

                //formato de fecha
                Calendar fecha = Calendar.getInstance();
                fecha.setTimeInMillis(Long.parseLong(mensaje[2]));

                String fecha_f = String.format("%d/%d/%d       %d:%02d %s", fecha.get(Calendar.DATE),
                        fecha.get(Calendar.MONTH), fecha.get(Calendar.YEAR), fecha.get(Calendar.HOUR),
                        fecha.get(Calendar.MINUTE), ((fecha.get(Calendar.AM_PM) == 0) ? "am" : "pm"));

                BufferedImage newImage = new BufferedImage(
                        tmp.getImg_perfil().getWidth(null),
                        tmp.getImg_perfil().getHeight(null),
                        BufferedImage.TYPE_INT_ARGB);

                Graphics2D graphics = newImage.createGraphics();
                graphics.drawImage(tmp.getImg_perfil(), 0, 0, null);
                graphics.dispose();

                Image img = newImage.getScaledInstance(40, 40, Image.SCALE_DEFAULT);

                twits_p[i] = new Model_msg(new ImageIcon(img), mensaje[1],
                        tmp.getUser(), fecha_f);

                content.setPreferredSize(new Dimension(1040, (i + 1) * 125));

                content.add(twits_p[i]);

                content.revalidate();
                content.repaint();

                content_scroll.revalidate();
                content_scroll.repaint();
                
                JScrollBar barra = content_scroll.getVerticalScrollBar();
                barra.setValue(barra.getMaximum());
                content_scroll.repaint();
                
                this.repaint();
            }

        } else {
            ImageIcon vacio_icon = new ImageIcon("varios/icon_vacio.png");

            Model_msg a = new Model_msg(vacio_icon, "UYYYY\nNo te han mencionado\nTodavia\nXD ", "", "");
            content.add(a);
        }


        background.revalidate();
        background.repaint();
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JPanel content;
    private javax.swing.JScrollPane content_scroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel txtUsr;
    // End of variables declaration//GEN-END:variables
}
